# Development Dockerfile for NestJS Server
FROM node:18-alpine

# Set working directory
WORKDIR /app

# Install system dependencies and pnpm
RUN apk add --no-cache \
    postgresql-client \
    curl \
    openssl \
    && rm -rf /var/cache/apk/* \
    && npm install -g pnpm

# Create app user
RUN addgroup -g 1001 -S nodejs
RUN adduser -S nestjs -u 1001

# Copy package files
COPY package.json ./
COPY pnpm-lock.yaml ./
COPY tsconfig*.json ./
COPY nest-cli.json ./

# Install dependencies
RUN pnpm install --frozen-lockfile

# Copy Prisma schema first
COPY src/prisma ./src/prisma

# Generate Prisma client with binary targets for Alpine
RUN pnpm exec prisma generate --schema=./src/prisma/schema.prisma

# Copy rest of source code
COPY . .

# Change ownership to app user
RUN chown -R nestjs:nodejs /app
USER nestjs

# Expose port
EXPOSE 3001

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:3001/v1/health || exit 1

# Development command
CMD ["pnpm", "run", "start:dev"]
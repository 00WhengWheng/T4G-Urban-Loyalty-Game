services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: t4g-postgres-dev
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-t4g_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-t4g_password}
      POSTGRES_DB: ${POSTGRES_DB:-t4g_database}
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/src/migrations:/docker-entrypoint-initdb.d
    networks:
      - t4g-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-t4g_user}"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: t4g-redis-dev
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - t4g-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    command: redis-server --appendonly yes

  # NestJS Backend (Development)
  server:
    build:
      context: ./server
      dockerfile: Dockerfile.dev
    container_name: t4g-server-dev
    restart: unless-stopped
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://${POSTGRES_USER:-t4g_user}:${POSTGRES_PASSWORD:-t4g_password}@postgres:5432/${POSTGRES_DB:-t4g_database}
      REDIS_HOST: redis
      REDIS_PORT: 6379
      JWT_SECRET: ${JWT_SECRET:-dev-secret-key}
    ports:
      - "3002:3001"
    volumes:
      - ./server:/app
      - /app/node_modules
      - /app/.pnpm-store
    networks:
      - t4g-network
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: pnpm run start:dev

  # React Frontend (Development)
  client:
    build:
      context: ./client
      dockerfile: Dockerfile.dev
    container_name: t4g-client-dev
    restart: unless-stopped
    environment:
      VITE_API_BASE_URL: http://localhost:3002
      VITE_APP_NAME: T4G Social Game
    ports:
      - "4001:3000"
    volumes:
      - ./client:/app
      - /app/node_modules
      - /app/.pnpm-store
    networks:
      - t4g-network
    depends_on:
      - server
    command: pnpm run dev

  # Database Admin (Optional)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: t4g-pgadmin-dev
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@t4g.com
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5051:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - t4g-network
    depends_on:
      - postgres

  # Redis Commander (Optional)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: t4g-redis-commander-dev
    restart: unless-stopped
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    networks:
      - t4g-network
    depends_on:
      - redis

volumes:
  postgres_data:
    driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local

networks:
  t4g-network:
    driver: bridge